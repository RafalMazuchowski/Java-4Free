package ggoralski_Swing;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class OknoGlowne extends javax.swing.JFrame {

    /** Creates new form OknoGlowne */
    public OknoGlowne() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserOtworzPlik = new javax.swing.JFileChooser();
        jFileChooserZapiszPlik = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        buttonOtworz = new javax.swing.JButton();
        buttonZapisz = new javax.swing.JButton();
        buttonZakończ = new javax.swing.JButton();

        jFileChooserZapiszPlik.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooserZapiszPlik.setApproveButtonText("Zapisz");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 200));

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        buttonOtworz.setText("Otwórz");
        buttonOtworz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOtworzActionPerformed(evt);
            }
        });

        buttonZapisz.setText("Zapisz");
        buttonZapisz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonZapiszActionPerformed(evt);
            }
        });

        buttonZakończ.setText("Zakończ");
        buttonZakończ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonZakończActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonOtworz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonZapisz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                        .addComponent(buttonZakończ)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOtworz)
                    .addComponent(buttonZapisz)
                    .addComponent(buttonZakończ))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonOtworzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOtworzActionPerformed
        // TODO add your handling code here:
        int odpowiedz = jFileChooserOtworzPlik.showOpenDialog(this);
            if (odpowiedz == jFileChooserOtworzPlik.APPROVE_OPTION) {
                File file = jFileChooserOtworzPlik.getSelectedFile();
                try {
                    textArea.read( new FileReader( file.getAbsolutePath() ), null );
                } catch (IOException e) {
                    System.out.println("Nie mogę otworzyć pliku: "+file.getAbsolutePath());
                    System.out.println("Problem: "+e);
                }
        }
    }//GEN-LAST:event_buttonOtworzActionPerformed

    private void buttonZapiszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonZapiszActionPerformed
        // TODO add your handling code here:
        int odpowiedz = jFileChooserZapiszPlik.showSaveDialog(this);
            if (odpowiedz == jFileChooserZapiszPlik.APPROVE_OPTION) {
                File file = jFileChooserZapiszPlik.getSelectedFile();
                try {
                    FileWriter out = new FileWriter(file);
                    String text = textArea.getText();
                    out.write(text.replaceAll("\n", System.getProperty("line.separator")));
                    out.close();
                } catch (IOException e) {
                    System.out.println("Nie mogę zapisać pliku: "+file.getAbsolutePath());
                    System.out.println("Problem: "+e);
                }
            }
    }//GEN-LAST:event_buttonZapiszActionPerformed

    private void buttonZakończActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonZakończActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_buttonZakończActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OknoGlowne.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OknoGlowne().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonOtworz;
    private javax.swing.JButton buttonZakończ;
    private javax.swing.JButton buttonZapisz;
    private javax.swing.JFileChooser jFileChooserOtworzPlik;
    private javax.swing.JFileChooser jFileChooserZapiszPlik;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
